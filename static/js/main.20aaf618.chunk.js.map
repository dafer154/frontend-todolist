{"version":3,"sources":["services/UsersService.js","components/users/User.js","components/users/AddUser.js","components/shared/Alerts.js","components/users/ListUsers.js","services/TasksService.js","components/tasks/Task.js","components/tasks/AddTask.js","components/tasks/ListTasks.js","components/shared/Navigation.js","components/shared/Main.js","App.js","index.js"],"names":["UsersService","api","url","axios","get","this","username","post","id","user","put","delete","query","User","state","props","handleEdit","handleDelete","Card","className","border","style","width","Body","Text","Footer","Button","variant","onClick","editUser","_id","deleteUser","Component","AddUser","show","editing","edit","usersService","actionSuccess","onInputChange","e","setState","target","name","value","createUser","preventDefault","newUser","then","res","handleClose","catch","err","console","error","addUsers","handleShow","userGetByid","data","body","userGetById","Modal","onHide","type","placeholder","onChange","required","onSubmit","Alerts","Alert","ListUsers","users","createuser","notification","getAllUsers","action","setTimeout","searchUser","window","confirm","changeShowModal","actionAddUser","aria-label","handleChange","length","map","key","TasksService","task","title","content","author","status","Task","handleUnassign","listColors","Title","deleteTask","Badge","format","date","editTask","unassignUser","AddTask","taskService","TaskService","userSelected","Date","listStatus","createTask","newTask","editsTasks","addTasks","onChangeDate","log","allUsers","taskGetByid","taskGetById","centered","disabled","selected","cols","rows","ListTasks","tasksService","TasksServices","initialStatus","tasksAll","tasksOpen","tasksCompleted","tasksArchived","tasksInProgress","createtask","messageAlert","getAllTasks","filter","label","i","marginRight","checked","selectStatus","searchTask","filteredOpen","filteredInProgress","filteredCompleted","filteredArchived","actionAddTask","Navigation","Navbar","expand","bg","to","Brand","Toggle","aria-controls","Collapse","Nav","activeClassName","Main","Jumbotron","role","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20aaf618.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class UsersService {\r\n\r\n    api = {\r\n        // url: \"http://localhost:4000/tasks\"\r\n        url: \"https://condor-backend-todolist.herokuapp.com/users\"\r\n    };\r\n\r\n    getAllUsers() {\r\n        return axios.get(`${this.api.url}/getAll`)\r\n    };\r\n\r\n    addUsers(username) {\r\n        return axios.post(`${this.api.url}/add`, {\r\n            username: username.username,\r\n        });\r\n    }\r\n\r\n    userGetByid(id) {\r\n        return axios.get(`${this.api.url}/${id}`)\r\n    }\r\n\r\n    editUser(user, id) {\r\n        return axios.put(`${this.api.url}/${id}`, user);\r\n    }\r\n\r\n    deleteUser(id) {\r\n        return axios.delete(`${this.api.url}/${id}`);\r\n    }\r\n\r\n    searchUser(query) {\r\n        return axios.post(`${this.api.url}/search`, { query: query })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './styles/User.css'\r\n\r\nexport class User extends Component {\r\n\r\n    state = {\r\n        user: this.props.user\r\n    }\r\n\r\n    editUser(id) {\r\n        this.props.handleEdit(id);\r\n    }\r\n\r\n    deleteUser(id) {\r\n        this.props.handleDelete(id);\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state\r\n        return (\r\n            <Card className=\"card-custom\" border=\"primary\" style={{ width: '17rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text><strong>Username: </strong>{user.username}</Card.Text>\r\n                    <Card.Footer className=\"footer-custom\">\r\n                        <Button variant=\"primary\" onClick={() => this.editUser(user._id)}>Edit</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.deleteUser(user._id)}>Delete</Button>\r\n                    </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react'\r\nimport UsersService from '../../services/UsersService';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport './styles/AddUser.css';\r\n\r\nexport class AddUser extends Component {\r\n\r\n    state = {\r\n        show: this.props.show,\r\n        id: this.props.id,\r\n        editing: this.props.edit,\r\n        usersService: new UsersService(),\r\n        username: '',\r\n        actionSuccess: false,\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ show: !this.state.show, id: '', editing: false }, () => {\r\n            this.props.handleShow(this.state.show, this.state.actionSuccess)\r\n        })\r\n    }\r\n\r\n    userGetById() {\r\n        this.state.usersService.userGetByid(this.state.id).then((res) => {\r\n            const user = res.data.body\r\n            this.setState({\r\n                username: user.username\r\n            })\r\n        })\r\n    }\r\n\r\n    createUser = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username\r\n        };\r\n\r\n        if (this.state.editing) {\r\n            this.state.usersService.editUser(newUser, this.state.id).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        } else {\r\n            this.state.usersService.addUsers(newUser).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.state.id !== '') {\r\n            this.userGetById();\r\n        } else return false\r\n    }\r\n\r\n    render() {\r\n        const { show, editing } = this.state\r\n        return (\r\n            <Modal show={show} onHide={() => this.handleClose()}>\r\n                <Modal.Body>\r\n                    <div className=\"button-close\">\r\n                        <Button variant=\"secondary\" className=\"button-close-custom\" onClick={() => this.handleClose()}>X</Button>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"card card-body\">\r\n                            <h4>{editing ? \"Edit User\" : \"Create a User\"}</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"username\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={this.state.username}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <form onSubmit={this.createUser}>\r\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                    </form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","import React, { Component } from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport './styles/Alerts.css'\r\n\r\nexport class Alerts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"alert\">\r\n                <Alert variant=\"success\">\r\n                    Success!!\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Alerts\r\n","import React, { Component } from 'react'\r\nimport UsersService from '../../services/UsersService';\r\nimport User from './User';\r\nimport './styles/ListUsers.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddUser from './AddUser';\r\nimport { Alerts } from '../shared/Alerts';\r\n\r\nexport class ListUsers extends Component {\r\n\r\n    state = {\r\n        usersService: new UsersService(),\r\n        users: [],\r\n        createuser: false,\r\n        query: '',\r\n        id: '',\r\n        editing: false,\r\n        notification: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers()\r\n    }\r\n\r\n    getAllUsers() {\r\n        this.setState({ users: [] });\r\n        this.state.usersService.getAllUsers().then((res) => {\r\n            this.setState({ users: res.data.body })\r\n        })\r\n    }\r\n\r\n    actionAddUser(e) {\r\n        e.preventDefault();\r\n        this.setState({ createuser: true })\r\n    }\r\n\r\n    changeShowModal(value, action) {\r\n        this.setState({ createuser: value, id: \"\", editing: false });\r\n        \r\n        if (action) {\r\n            this.setState({ notification: true })\r\n            setTimeout(() => {\r\n                this.setState({ notification: false })\r\n            }, 2000);\r\n        }\r\n        \r\n        this.getAllUsers();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const query = e.target.value\r\n        this.setState({ query })\r\n        if (query === '') {\r\n            this.getAllUsers();\r\n        }\r\n    }\r\n\r\n    searchUser(e) {\r\n        e.preventDefault();\r\n        const query = this.state.query\r\n        this.state.usersService.searchUser(query).then((res) => {\r\n            this.setState({ users: res.data.body })\r\n        })\r\n    }\r\n\r\n    editUser(id) {\r\n        this.setState({ createuser: true, editing: true, id: id })\r\n    }\r\n\r\n    deleteUser(id) {\r\n        if (window.confirm(\"Are you sure delete this User?\")) {\r\n            this.state.usersService.deleteUser(id).then((res) => {\r\n                this.getAllUsers()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query, createuser, editing, id, users, notification } = this.state\r\n        return (\r\n            <div className=\"container-list\">\r\n                {\r\n                    notification ? <Alerts /> : null\r\n                }\r\n                <div><h1>List Users</h1></div>\r\n                {createuser ? <AddUser show={createuser} handleShow={(e, action) => this.changeShowModal(e, action)} edit={editing} id={id} /> : null}\r\n                <div className=\"add-task\">\r\n                    <Button onClick={(e) => { this.actionAddUser(e) }}>Add User</Button>\r\n                </div>\r\n                <div className=\"container-search\">\r\n\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input style={{ width: \"85%\" }}\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                            value={query}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                            type=\"submit\"\r\n                            onClick={(e) => this.searchUser(e)}\r\n                        >\r\n                            Search\r\n              </button>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"wrapp-users\">\r\n                    {users.length !== 0 ? users.map((user) => {\r\n                        return (\r\n                            <User key={user._id} user={user} handleDelete={(id) => this.deleteUser(id)} handleEdit={(id) => this.editUser(id)} />\r\n                        )\r\n                    }) : <h5>There are no users to show</h5>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListUsers\r\n","import axios from \"axios\";\r\n\r\nexport default class TasksService {\r\n\r\n    api = {\r\n        // url: \"http://localhost:4000/tasks\"\r\n        url: \"https://condor-backend-todolist.herokuapp.com/tasks\"\r\n    };\r\n\r\n    getAllTasks() {\r\n        return axios.get(`${this.api.url}/getAll`)\r\n    };\r\n\r\n    addTasks(task) {\r\n        const { title, content, author, status } = task;\r\n\r\n        return axios.post(`${this.api.url}/add`, {\r\n            title, content, author, status\r\n        });\r\n    }\r\n\r\n    taskGetByid(id){\r\n        return axios.get(`${this.api.url}/${id}`)\r\n    }\r\n\r\n    editsTasks(task, id) {\r\n        return axios.put(`${this.api.url}/${id}`, task);\r\n    }\r\n\r\n    deleteTask(id){\r\n        return axios.delete(`${this.api.url}/${id}`);\r\n    }\r\n\r\n    unassignUser(id){\r\n        return axios.put(`${this.api.url}/unassignUser/${id}`)\r\n    }\r\n\r\n    searchTask(query, status){\r\n        return axios.post(`${this.api.url}/search`, {query: query, status: status})\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './styles/Task.css'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport { format } from \"timeago.js\";\r\n\r\nexport class Task extends Component {\r\n\r\n    state = {\r\n        task: this.props.task\r\n    }\r\n\r\n    editTask(id) {\r\n        this.props.handleEdit(id);\r\n    }\r\n\r\n    deleteTask(id) {\r\n        this.props.handleDelete(id);\r\n    }\r\n\r\n    unassignUser(id) {\r\n        this.props.handleUnassign(id);\r\n    }\r\n\r\n    listColors(value) {\r\n        switch (value) {\r\n            case 'Open':\r\n                return \"primary\"\r\n            case 'In-Progress':\r\n                return \"secondary\"\r\n            case 'Completed':\r\n                return \"success\"\r\n            case 'Archived':\r\n                return \"warning\"\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state\r\n        return (\r\n            <Card className=\"card-custom text-left\" border={this.listColors(task.status)} style={{ width: '17rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <div className=\"custom-title\">\r\n                            <div>{task.title}</div>\r\n                            <div><Button onClick={() => this.deleteTask(task._id)} className=\"custom-delete\" variant=\"danger\">X</Button></div>\r\n                        </div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {task.content}\r\n                    </Card.Text>\r\n                    <div>\r\n                        <strong>Status: </strong><Badge variant={this.listColors(task.status)}>{task.status}</Badge>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Author: </strong><span>{task.author}</span>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Date: </strong><span>{format(task.date)}</span>\r\n                    </div>\r\n                    <Card.Footer className=\"footer-custom\">\r\n                        <Button variant=\"primary\" onClick={() => this.editTask(task._id)}>Edit</Button>\r\n                        <Button variant=\"warning\" onClick={() => this.unassignUser(task._id)}>Unassigment</Button>\r\n                    </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task\r\n","import React, { Component } from 'react'\r\nimport TaskService from '../../services/TasksService';\r\nimport UsersService from '../../services/UsersService';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport './styles/AddTask.css';\r\n\r\nexport class AddTask extends Component {\r\n\r\n    state = {\r\n        show: this.props.show,\r\n        taskService: new TaskService(),\r\n        usersService: new UsersService(),\r\n        users: [],\r\n        actionSuccess: false,\r\n        userSelected: \"\",\r\n        content: \"\",\r\n        title: \"\",\r\n        status: \"Open\",\r\n        date: new Date(),\r\n        listStatus: ['Open', 'In-Progress', 'Completed', 'Archived'],\r\n        editing: this.props.edit,\r\n        id: this.props.id,\r\n    };\r\n\r\n\r\n    getAllUsers() {\r\n        this.state.usersService.getAllUsers().then((res) => {\r\n            const allUsers = res.data.body;\r\n            this.setState({ users: allUsers, userSelected: allUsers.length !== 0 ? allUsers[0].username : '' })\r\n        })\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ show: !this.state.show, id: '', editing: false }, () => {\r\n            this.props.handleShow(this.state.show, this.state.actionSuccess)\r\n        })\r\n    }\r\n\r\n    taskGetById() {\r\n        this.state.taskService.taskGetByid(this.state.id).then((res) => {\r\n            const task = res.data.body\r\n            this.setState({\r\n                userSelected: task.author,\r\n                content: task.content,\r\n                title: task.title,\r\n                status: task.status,\r\n                date: task.date\r\n            })\r\n        })\r\n    }\r\n\r\n    createTask = (e) => {\r\n        e.preventDefault();\r\n        const newTask = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            date: this.state.date,\r\n            author: this.state.userSelected,\r\n            status: this.state.status\r\n        };\r\n\r\n        if (this.state.editing) {\r\n            this.state.taskService.editsTasks(newTask, this.state.id).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        } else {\r\n            this.state.taskService.addTasks(newTask).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n        if (this.state.id !== '') {\r\n            this.taskGetById();\r\n        } else return false\r\n    }\r\n\r\n    onChangeDate = (date) => {\r\n        console.log(date);\r\n        this.setState({ date });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { show, editing, users, listStatus, userSelected, status, title, content } = this.state\r\n        return (\r\n            <Modal show={show} onHide={() => this.handleClose()} centered>\r\n                <Modal.Body>\r\n                    <div className=\"button-close\">\r\n                        <Button variant=\"secondary\" className=\"button-close-custom\" onClick={() => this.handleClose()}>X</Button>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"card card-body\">\r\n                            <h4>{editing ? \"Edit Task\" : \"Create a Task\"}</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>User</label>\r\n                                <select\r\n                                    name=\"userSelected\"\r\n                                    id=\"userSelected\"\r\n                                    className=\"form-control\"\r\n                                    value={userSelected}\r\n                                    onChange={this.onInputChange}\r\n                                >\r\n                                    <option disabled selected value> -- select an option -- </option>\r\n                                    {users.map((user) => (\r\n                                        <option value={user.username} key={user._id}>\r\n                                            {user.username}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Status</label>\r\n                                <select\r\n                                    name=\"status\"\r\n                                    id=\"statusSelected\"\r\n                                    className=\"form-control\"\r\n                                    value={status}\r\n                                    onChange={this.onInputChange}\r\n                                >\r\n                                    {listStatus.map((state) => (\r\n                                        <option value={state} key={state}>\r\n                                            {state}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Title\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={title}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Content</label>\r\n                                <textarea\r\n                                    name=\"content\"\r\n                                    id=\"content\"\r\n                                    cols=\"5\"\r\n                                    rows=\"5\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Content\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={content}\r\n                                    required\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <form onSubmit={this.createTask}>\r\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                    </form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask\r\n","import React, { Component } from 'react'\r\nimport TasksServices from '../../services/TasksService';\r\nimport Task from './Task';\r\nimport './styles/ListTask.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddTask from './AddTask';\r\nimport { Alerts } from '../shared/Alerts';\r\n\r\nexport class ListTasks extends Component {\r\n\r\n    state = {\r\n        tasksService: new TasksServices(),\r\n        initialStatus: 'Open',\r\n        tasksAll: [],\r\n        tasksOpen: [],\r\n        tasksCompleted: [],\r\n        tasksArchived: [],\r\n        tasksInProgress: [],\r\n        createtask: false,\r\n        query: '',\r\n        id: '',\r\n        editing: false,\r\n        notification: false,\r\n        messageAlert: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllTasks()\r\n    }\r\n\r\n    /**\r\n     * Allow make a call to the api and classifed the tasks\r\n     */\r\n\r\n    getAllTasks() {\r\n        this.setState({\r\n            tasksAll: [],\r\n            tasksOpen: [],\r\n            tasksCompleted: [],\r\n            tasksArchived: [],\r\n            tasksInProgress: []\r\n        });\r\n        this.state.tasksService.getAllTasks().then((res) => {\r\n\r\n            const tasksAll = res.data.body;\r\n            const tasksOpen = tasksAll.filter((task) => task.status === 'Open');\r\n            const tasksCompleted = tasksAll.filter((task) => task.status === 'Completed');\r\n            const tasksInProgress = tasksAll.filter((task) => task.status === 'In-Progress');\r\n            const tasksArchived = tasksAll.filter((task) => task.status === 'Archived');\r\n\r\n            this.setState({ tasksAll, tasksOpen, tasksCompleted, tasksInProgress, tasksArchived })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Allow select the option ['Open', 'In-Progress', 'Archived', 'Completed'] on the checkbox \r\n     */\r\n    selectStatus(e, label) {\r\n        this.setState({ initialStatus: label, query: '' })\r\n    }\r\n\r\n    /*\r\n        Show The component CREATE and EDIT task\r\n    */\r\n    actionAddTask(e) {\r\n        e.preventDefault();\r\n        this.setState({ createtask: true })\r\n    }\r\n\r\n    changeShowModal(value, action) {\r\n\r\n        //Set values to emptys\r\n        this.setState({ createtask: value, id: \"\", editing: false });\r\n\r\n        //If you create or edit SUCCESS show the TOAST\r\n        if (action) {\r\n            this.setState({ notification: true })\r\n            setTimeout(() => {\r\n                this.setState({ notification: false })\r\n            }, 2000);\r\n        }\r\n\r\n        //Call to method for set the new state of all the TASKS\r\n        this.getAllTasks();\r\n    }\r\n\r\n\r\n    /**\r\n     * List of the checkbox ['Open', 'In-Progress', 'Completed', 'Archived']\r\n     */\r\n\r\n    listStatus() {\r\n        const status = ['Open', 'In-Progress', 'Completed', 'Archived']\r\n        return status.map((state, i) => {\r\n            return (\r\n                <div key={i}>\r\n                    <input\r\n                        style={{ marginRight: '8px' }}\r\n                        type=\"radio\"\r\n                        label={state}\r\n                        value={state}\r\n                        checked={this.state.initialStatus === state}\r\n                        onChange={(e) => this.selectStatus(e, state)}\r\n                    /><label>{state}</label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {e} \r\n     * change of state for value query, if it's empty call function\r\n     * getAllTasks() for field all the tasks\r\n     */\r\n\r\n    handleChange(e) {\r\n        const query = e.target.value\r\n        this.setState({ query })\r\n        if (query === '') {\r\n            this.getAllTasks();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {e}\r\n     * Function allow search a task when you make a click or enter in the button\r\n     */\r\n    searchTask(e) {\r\n        e.preventDefault();\r\n        const status = this.state.initialStatus;\r\n        const query = this.state.query\r\n\r\n        switch (status) {\r\n            case 'Open':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredOpen = res.data.body;\r\n                    this.setState({ tasksOpen: filteredOpen })\r\n                })\r\n                break\r\n            case 'In-Progress':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredInProgress = res.data.body;\r\n                    this.setState({ tasksInProgress: filteredInProgress })\r\n                })\r\n                break\r\n            case 'Completed':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredCompleted = res.data.body;\r\n                    this.setState({ tasksCompleted: filteredCompleted })\r\n                })\r\n                break\r\n            case 'Archived':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredArchived = res.data.body;\r\n                    this.setState({ tasksArchived: filteredArchived })\r\n                })\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    editTask(id) {\r\n        this.setState({ createtask: true, editing: true, id: id })\r\n    }\r\n\r\n    deleteTask = (id) => {\r\n        if (window.confirm(\"Are you sure delete this Task?\")) {\r\n            this.state.tasksService.deleteTask(id).then((res) => {\r\n                this.getAllTasks()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        };\r\n    }\r\n\r\n\r\n    messageAlert(value) {\r\n        switch (value) {\r\n            case 'edit':\r\n                return this.setState({ messageAlert: \"Success EDIT\" })\r\n            case 'delete':\r\n                return this.setState({ messageAlert: \"Success DELETE\" })\r\n            case 'add':\r\n                return this.setState({ messageAlert: \"Success ADD\" })\r\n            case 'unassign':\r\n                return this.setState({ messageAlert: \"Success UNASSIGN user\" })\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    unassignUser(id) {\r\n        if (window.confirm(\"Are you sure delete this User in the task?\")) {\r\n            this.state.tasksService.unassignUser(id).then((res) => {\r\n                this.getAllTasks()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { query,\r\n            initialStatus,\r\n            tasksOpen,\r\n            tasksInProgress,\r\n            tasksCompleted,\r\n            tasksArchived,\r\n            createtask,\r\n            editing,\r\n            id,\r\n            notification } = this.state\r\n        return (\r\n            <div className=\"container-list\">\r\n                {\r\n                    notification ? <Alerts /> : null\r\n                }\r\n                <div><h1>List Tasks</h1></div>\r\n                {createtask ? <AddTask show={createtask} handleShow={(e, action) => this.changeShowModal(e, action)} edit={editing} id={id} /> : null}\r\n                <div className=\"add-task\">\r\n                    <Button onClick={(e) => { this.actionAddTask(e) }}>add Task</Button>\r\n                </div>\r\n                <div className=\"container-search\">\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input style={{ width: \"85%\" }}\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                            value={query}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                            type=\"submit\"\r\n                            onClick={(e) => this.searchTask(e)}\r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"container-status\">\r\n                    {this.listStatus()}\r\n                </div>\r\n                {initialStatus === 'Open' && tasksOpen.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksOpen.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"In-Progress\" && tasksInProgress.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksInProgress.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"Completed\" && tasksCompleted.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksCompleted.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"Archived\" && tasksArchived.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksArchived.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : <h5>There are no tasks to show</h5>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTasks\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <NavLink to=\"/\"><Navbar.Brand>To Do List</Navbar.Brand></NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"active\">\r\n                            Home\r\n                </NavLink>\r\n                        <NavLink\r\n                            className=\"nav-link\"\r\n                            to=\"/listTasks\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            List Tasks\r\n                </NavLink>\r\n                        <NavLink\r\n                            className=\"nav-link\"\r\n                            to=\"/listUsers\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            List Users\r\n                </NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <h1>Hello, To Everybody!</h1>\r\n            <p>\r\n                This project is similar to tool Trello, for enlarge the knowledge in ReactJS\r\n            </p>\r\n            <p>\r\n                <NavLink\r\n                    className=\"btn btn-primary btn-lg\"\r\n                    to=\"/listTasks\"\r\n                    role=\"button\"\r\n                >\r\n                    List Tasks!\r\n        </NavLink>\r\n            </p>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route} from 'react-router-dom';\nimport ListUsers from './components/users/ListUsers';\nimport ListTasks from './components/tasks/ListTasks';\nimport Navigation from './components/shared/Navigation';\nimport Main from './components/shared/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation></Navigation>\n        <div className=\"container p-4\">\n        <Route path=\"/\" exact component={Main}></Route>\n        <Route path=\"/listTasks\" component={ListTasks}></Route>\n        <Route path=\"/listUsers\" component={ListUsers}></Route>\n      </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}