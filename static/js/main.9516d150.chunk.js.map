{"version":3,"sources":["services/UsersService.js","components/users/User.js","components/users/AddUser.js","components/shared/Alerts.js","components/users/ListUsers.js","services/TasksService.js","components/tasks/Task.js","components/tasks/AddTask.js","components/tasks/ListTasks.js","components/shared/Navigation.js","components/shared/Main.js","App.js","index.js"],"names":["UsersService","api","url","axios","get","this","username","post","id","user","put","delete","query","User","state","props","editUser","handleEdit","deleteUser","handleDelete","Card","className","border","style","width","Body","Text","Footer","Button","variant","onClick","_id","Component","AddUser","show","editing","edit","usersService","actionSuccess","onInputChange","e","setState","target","name","value","handleClose","handleShow","userGetById","userGetByid","then","res","data","body","createUser","preventDefault","newUser","catch","err","console","error","addUsers","Modal","onHide","type","placeholder","onChange","required","onSubmit","Alerts","Alert","ListUsers","users","createuser","notification","getAllUsers","actionAddUser","changeShowModal","action","setTimeout","handleChange","searchUser","window","confirm","aria-label","length","map","key","TasksService","task","title","content","author","status","Task","editTask","deleteTask","unassignUser","handleUnassign","listColors","Title","Badge","format","date","AddTask","taskService","TaskService","userSelected","Date","listStatus","allUsers","taskGetById","taskGetByid","createTask","newTask","editsTasks","addTasks","centered","disabled","selected","cols","rows","ListTasks","tasksService","TasksServices","initialStatus","tasksAll","tasksOpen","tasksCompleted","tasksArchived","tasksInProgress","createtask","messageAlert","getAllTasks","filter","selectStatus","label","actionAddTask","i","marginRight","checked","searchTask","filteredOpen","filteredInProgress","filteredCompleted","filteredArchived","Navigation","Navbar","expand","bg","to","Brand","Toggle","aria-controls","Collapse","Nav","activeClassName","Main","Jumbotron","role","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9516d150.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class UsersService {\r\n\r\n    api = {\r\n        // url: \"http://localhost:4000/tasks\"\r\n        url: \"https://condor-backend-todolist.herokuapp.com/users\"\r\n    };\r\n\r\n    getAllUsers() {\r\n        return axios.get(`${this.api.url}/`)\r\n    };\r\n\r\n    addUsers(username) {\r\n        return axios.post(`${this.api.url}/add`, {\r\n            username: username.username,\r\n        });\r\n    }\r\n\r\n    userGetByid(id) {\r\n        return axios.get(`${this.api.url}/${id}`)\r\n    }\r\n\r\n    editUser(user, id) {\r\n        return axios.put(`${this.api.url}/edit/${id}`, user);\r\n    }\r\n\r\n    deleteUser(id) {\r\n        return axios.delete(`${this.api.url}/delete/${id}`);\r\n    }\r\n\r\n    searchUser(query) {\r\n        return axios.post(`${this.api.url}/search`, { query: query })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './styles/User.css'\r\n\r\nexport class User extends Component {\r\n\r\n    state = {\r\n        user: this.props.user\r\n    }\r\n\r\n    /**\r\n     * Method that send the variable id to the component parent, \r\n     * and can edit the user \r\n     */\r\n    editUser = (id) => {\r\n        this.props.handleEdit(id);\r\n    }\r\n\r\n    \r\n    /**\r\n     * Method that send the variable id to the component parent, \r\n     * and can delete the user \r\n     */\r\n    deleteUser = (id) => {\r\n        this.props.handleDelete(id);\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state\r\n        return (\r\n            <Card className=\"card-custom\" border=\"primary\" style={{ width: '17rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text><strong>Username: </strong>{user.username}</Card.Text>\r\n                    <Card.Footer className=\"footer-custom\">\r\n                        <Button variant=\"primary\" onClick={() => this.editUser(user._id)}>Edit</Button>\r\n                        <Button variant=\"danger\" onClick={() => this.deleteUser(user._id)}>Delete</Button>\r\n                    </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react'\r\nimport UsersService from '../../services/UsersService';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport './styles/AddUser.css';\r\n\r\nexport class AddUser extends Component {\r\n\r\n    state = {\r\n        show: this.props.show,\r\n        id: this.props.id,\r\n        editing: this.props.edit,\r\n        usersService: new UsersService(),\r\n        username: '',\r\n        actionSuccess: false,\r\n    }\r\n\r\n    /**\r\n     * Change values on the inputs \r\n     */\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    /**\r\n        Close the modal, if was success the edit and save send variable action for show the toast\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ show: !this.state.show, id: '', editing: false }, () => {\r\n            this.props.handleShow(this.state.show, this.state.actionSuccess)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Consume API userId for fill the input username\r\n     */\r\n\r\n    userGetById = () => {\r\n        this.state.usersService.userGetByid(this.state.id).then((res) => {\r\n            const user = res.data.body\r\n            this.setState({\r\n                username: user.username\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for create or edit user \r\n     */\r\n    createUser = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username\r\n        };\r\n\r\n        if (this.state.editing) {\r\n            this.state.usersService.editUser(newUser, this.state.id).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        } else {\r\n            this.state.usersService.addUsers(newUser).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.state.id !== '') {\r\n            this.userGetById();\r\n        } else return false\r\n    }\r\n\r\n    render() {\r\n        const { show, editing } = this.state\r\n        return (\r\n            <Modal show={show} onHide={() => this.handleClose()}>\r\n                <Modal.Body>\r\n                    <div className=\"button-close\">\r\n                        <Button variant=\"secondary\" className=\"button-close-custom\" onClick={() => this.handleClose()}>X</Button>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"card card-body\">\r\n                            <h4>{editing ? \"Edit User\" : \"Create a User\"}</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"username\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={this.state.username}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <form onSubmit={this.createUser}>\r\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                    </form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport './styles/Alerts.css'\r\n\r\nconst Alerts = () => {\r\n    return (\r\n        <div className=\"alert\">\r\n            <Alert variant=\"success\">\r\n                Success!!\r\n        </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n\r\n","import React, { Component } from 'react'\r\nimport UsersService from '../../services/UsersService';\r\nimport User from './User';\r\nimport './styles/ListUsers.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddUser from './AddUser';\r\nimport Alerts from '../shared/Alerts';\r\n\r\nexport class ListUsers extends Component {\r\n\r\n    state = {\r\n        usersService: new UsersService(),\r\n        users: [],\r\n        createuser: false,\r\n        query: '',\r\n        id: '',\r\n        editing: false,\r\n        notification: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers()\r\n    }\r\n\r\n    /**\r\n     * Method for call the API getAll users\r\n     */\r\n\r\n    getAllUsers = () => {\r\n        this.setState({ users: [] });\r\n        this.state.usersService.getAllUsers().then((res) => {\r\n            this.setState({ users: res.data.body })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * Allow show the component AddUser \r\n     */\r\n    actionAddUser = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ createuser: true })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * Method allow hidden the component AddUser, and receive the variable action if this was edit or save\r\n     */\r\n    changeShowModal = (value, action) => {\r\n        this.setState({ createuser: value, id: \"\", editing: false });\r\n        \r\n        if (action) {\r\n            this.setState({ notification: true })\r\n            setTimeout(() => {\r\n                this.setState({ notification: false })\r\n            }, 2000);\r\n        }\r\n        \r\n        this.getAllUsers();\r\n    }\r\n\r\n    /**\r\n     * Allow update the variable query, for the search of a User, \r\n     * if don't have any value call the method getAllUsers() \r\n     */\r\n    handleChange = (e) => {\r\n        const query = e.target.value\r\n        this.setState({ query })\r\n        if (query === '') {\r\n            this.getAllUsers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method that consume the API searchUser, how value entry the variable query \r\n     */\r\n    searchUser = (e) => {\r\n        e.preventDefault();\r\n        const query = this.state.query\r\n        this.state.usersService.searchUser(query).then((res) => {\r\n            this.setState({ users: res.data.body })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method that conditions if you stay editing a User, and set the variable id \r\n     */\r\n    editUser = (id) => {\r\n        this.setState({ createuser: true, editing: true, id: id })\r\n    }\r\n\r\n    /**\r\n     * Method for call the API Delete Users\r\n    */\r\n\r\n    deleteUser = (id) => {\r\n        if (window.confirm(\"Are you sure delete this User?\")) {\r\n            this.state.usersService.deleteUser(id).then((res) => {\r\n                this.getAllUsers()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query, createuser, editing, id, users, notification } = this.state\r\n        return (\r\n            <div className=\"container-list\">\r\n                {\r\n                    notification ? <Alerts /> : null\r\n                }\r\n                <div><h1>List Users</h1></div>\r\n                {createuser ? <AddUser show={createuser} handleShow={(e, action) => this.changeShowModal(e, action)} edit={editing} id={id} /> : null}\r\n                <div className=\"add-task\">\r\n                    <Button onClick={(e) => { this.actionAddUser(e) }}>Add User</Button>\r\n                </div>\r\n                <div className=\"container-search\">\r\n\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input style={{ width: \"85%\" }}\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search by Username\"\r\n                            aria-label=\"Search\"\r\n                            value={query}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                            type=\"submit\"\r\n                            onClick={(e) => this.searchUser(e)}\r\n                        >\r\n                            Search\r\n              </button>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"wrapp-users\">\r\n                    {users.length !== 0 ? users.map((user) => {\r\n                        return (\r\n                            <User key={user._id} user={user} handleDelete={(id) => this.deleteUser(id)} handleEdit={(id) => this.editUser(id)} />\r\n                        )\r\n                    }) : <h5>There are no users to show</h5>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListUsers\r\n","import axios from \"axios\";\r\n\r\nexport default class TasksService {\r\n\r\n    api = {\r\n        // url: \"http://localhost:4000/tasks\"\r\n        url: \"https://condor-backend-todolist.herokuapp.com/tasks\"\r\n    };\r\n\r\n    getAllTasks() {\r\n        return axios.get(`${this.api.url}/`)\r\n    };\r\n\r\n    addTasks(task) {\r\n        const { title, content, author, status } = task;\r\n\r\n        return axios.post(`${this.api.url}/add`, {\r\n            title, content, author, status\r\n        });\r\n    }\r\n\r\n    taskGetByid(id) {\r\n        return axios.get(`${this.api.url}/${id}`)\r\n    }\r\n\r\n    editsTasks(task, id) {\r\n        return axios.put(`${this.api.url}/edit/${id}`, task);\r\n    }\r\n\r\n    deleteTask(id) {\r\n        return axios.delete(`${this.api.url}/delete/${id}`);\r\n    }\r\n\r\n    unassignUser(id) {\r\n        return axios.put(`${this.api.url}/unassign/${id}`)\r\n    }\r\n\r\n    searchTask(query, status) {\r\n        return axios.post(`${this.api.url}/search`, { query: query, status: status })\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './styles/Task.css'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport { format } from \"timeago.js\";\r\n\r\nexport class Task extends Component {\r\n\r\n    state = {\r\n        task: this.props.task\r\n    }\r\n\r\n    /**\r\n     * Method that send the variable id to the component parent, \r\n     * and can edit the Task \r\n     */\r\n    editTask = (id) => {\r\n        this.props.handleEdit(id);\r\n    }\r\n\r\n    /**\r\n     * Method that send the variable id to the component parent, \r\n     * and can delete the Task \r\n    */\r\n    deleteTask = (id) => {\r\n        this.props.handleDelete(id);\r\n    }\r\n\r\n    /**\r\n     * Method that send the variable id to the component parent, \r\n     * and can unassign a User to the Task \r\n     */\r\n    unassignUser = (id) => {\r\n        this.props.handleUnassign(id);\r\n    }\r\n\r\n    /**\r\n     * Method allow change the color depend of the status of the Task \r\n     */\r\n    listColors = (value) => {\r\n        switch (value) {\r\n            case 'Open':\r\n                return \"primary\"\r\n            case 'In progress':\r\n                return \"secondary\"\r\n            case 'Completed':\r\n                return \"success\"\r\n            case 'Archived':\r\n                return \"warning\"\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state\r\n        return (\r\n            <Card className=\"card-custom text-left\" border={this.listColors(task.status)} style={{ width: '17rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <div className=\"custom-title\">\r\n                            <div>{task.title}</div>\r\n                            <div><Button onClick={() => this.deleteTask(task._id)} className=\"custom-delete\" variant=\"danger\">X</Button></div>\r\n                        </div>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {task.content}\r\n                    </Card.Text>\r\n                    <div>\r\n                        <strong>Status: </strong><Badge variant={this.listColors(task.status)}>{task.status}</Badge>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Author: </strong><span>{task.author}</span>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Date: </strong><span>{format(task.date)}</span>\r\n                    </div>\r\n                    <Card.Footer className=\"footer-custom\">\r\n                        <Button variant=\"primary\" onClick={() => this.editTask(task._id)}>Edit</Button>\r\n                        <Button variant=\"warning\" onClick={() => this.unassignUser(task._id)}>Unassign</Button>\r\n                    </Card.Footer>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task\r\n","import React, { Component } from 'react'\r\nimport TaskService from '../../services/TasksService';\r\nimport UsersService from '../../services/UsersService';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport './styles/AddTask.css';\r\n\r\nexport class AddTask extends Component {\r\n\r\n    state = {\r\n        show: this.props.show,\r\n        taskService: new TaskService(),\r\n        usersService: new UsersService(),\r\n        users: [],\r\n        actionSuccess: false,\r\n        userSelected: \"\",\r\n        content: \"\",\r\n        title: \"\",\r\n        status: \"Open\",\r\n        date: new Date(),\r\n        listStatus: ['Open', 'In progress', 'Completed', 'Archived'],\r\n        editing: this.props.edit,\r\n        id: this.props.id,\r\n    };\r\n\r\n    /**\r\n     * Method for consume API getAllUsers and fill the list\r\n     */\r\n    getAllUsers = () => {\r\n        this.state.usersService.getAllUsers().then((res) => {\r\n            const allUsers = res.data.body;\r\n            this.setState({ users: allUsers, userSelected: allUsers.length !== 0 ? allUsers[0].username : '' })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Change values on the inputs \r\n     */\r\n    onInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    \r\n    /**\r\n        Close the modal, if was success the edit and save send variable action for show the toast\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ show: !this.state.show, id: '', editing: false }, () => {\r\n            this.props.handleShow(this.state.show, this.state.actionSuccess)\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Consume API taskId for fill the form and edit task\r\n     */\r\n    taskGetById = () => {\r\n        this.state.taskService.taskGetByid(this.state.id).then((res) => {\r\n            const task = res.data.body\r\n            this.setState({\r\n                userSelected: task.author,\r\n                content: task.content,\r\n                title: task.title,\r\n                status: task.status,\r\n                date: task.date\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Method for create or edit Task \r\n     */\r\n    createTask = (e) => {\r\n        e.preventDefault();\r\n        const newTask = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            date: this.state.date,\r\n            author: this.state.userSelected,\r\n            status: this.state.status\r\n        };\r\n\r\n        if (this.state.editing) {\r\n            this.state.taskService.editsTasks(newTask, this.state.id).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        } else {\r\n            this.state.taskService.addTasks(newTask).then((res) => {\r\n                this.setState({ actionSuccess: true })\r\n                this.handleClose();\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n        if (this.state.id !== '') {\r\n            this.taskGetById();\r\n        } else return false\r\n    }\r\n\r\n    render() {\r\n\r\n        const { show, editing, users, listStatus, userSelected, status, title, content } = this.state\r\n        return (\r\n            <Modal show={show} onHide={() => this.handleClose()} centered>\r\n                <Modal.Body>\r\n                    <div className=\"button-close\">\r\n                        <Button variant=\"secondary\" className=\"button-close-custom\" onClick={() => this.handleClose()}>X</Button>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"card card-body\">\r\n                            <h4>{editing ? \"Edit Task\" : \"Create a Task\"}</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>User</label>\r\n                                <select\r\n                                    name=\"userSelected\"\r\n                                    id=\"userSelected\"\r\n                                    className=\"form-control\"\r\n                                    value={userSelected}\r\n                                    onChange={this.onInputChange}\r\n                                >\r\n                                    <option disabled selected value> -- select an option -- </option>\r\n                                    {users.map((user) => (\r\n                                        <option value={user.username} key={user._id}>\r\n                                            {user.username}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Status</label>\r\n                                <select\r\n                                    name=\"status\"\r\n                                    id=\"statusSelected\"\r\n                                    className=\"form-control\"\r\n                                    value={status}\r\n                                    onChange={this.onInputChange}\r\n                                >\r\n                                    {listStatus.map((state) => (\r\n                                        <option value={state} key={state}>\r\n                                            {state}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Title\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={title}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Content</label>\r\n                                <textarea\r\n                                    name=\"content\"\r\n                                    id=\"content\"\r\n                                    cols=\"5\"\r\n                                    rows=\"5\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Content\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={content}\r\n                                    required\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <form onSubmit={this.createTask}>\r\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                    </form>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask\r\n","import React, { Component } from 'react'\r\nimport TasksServices from '../../services/TasksService';\r\nimport Task from './Task';\r\nimport './styles/ListTask.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddTask from './AddTask';\r\nimport Alerts from '../shared/Alerts';\r\n\r\nexport class ListTasks extends Component {\r\n\r\n    state = {\r\n        tasksService: new TasksServices(),\r\n        initialStatus: 'Open',\r\n        tasksAll: [],\r\n        tasksOpen: [],\r\n        tasksCompleted: [],\r\n        tasksArchived: [],\r\n        tasksInProgress: [],\r\n        createtask: false,\r\n        query: '',\r\n        id: '',\r\n        editing: false,\r\n        notification: false,\r\n        messageAlert: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllTasks()\r\n    }\r\n\r\n    /**\r\n     * Allow make a call to the api and classifed the tasks\r\n     */\r\n\r\n    getAllTasks = () => {\r\n        this.setState({\r\n            tasksAll: [],\r\n            tasksOpen: [],\r\n            tasksCompleted: [],\r\n            tasksArchived: [],\r\n            tasksInProgress: []\r\n        });\r\n        this.state.tasksService.getAllTasks().then((res) => {\r\n\r\n            const tasksAll = res.data.body;\r\n            const tasksOpen = tasksAll.filter((task) => task.status === 'Open');\r\n            const tasksCompleted = tasksAll.filter((task) => task.status === 'Completed');\r\n            const tasksInProgress = tasksAll.filter((task) => task.status === 'In progress');\r\n            const tasksArchived = tasksAll.filter((task) => task.status === 'Archived');\r\n\r\n            this.setState({ tasksAll, tasksOpen, tasksCompleted, tasksInProgress, tasksArchived })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Allow select the option ['Open', 'In-Progress', 'Archived', 'Completed'] on the checkbox \r\n     */\r\n    selectStatus = (e, label) => {\r\n        this.setState({ initialStatus: label, query: '' })\r\n    }\r\n\r\n    /*\r\n        Show The component CREATE and EDIT task\r\n    */\r\n    actionAddTask = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ createtask: true })\r\n    }\r\n\r\n    changeShowModal = (value, action) => {\r\n\r\n        //Set values to emptys\r\n        this.setState({ createtask: value, id: \"\", editing: false });\r\n\r\n        //If you create or edit SUCCESS show the TOAST\r\n        if (action) {\r\n            this.setState({ notification: true })\r\n            setTimeout(() => {\r\n                this.setState({ notification: false })\r\n            }, 2000);\r\n        }\r\n\r\n        //Call to method for set the new state of all the TASKS\r\n        this.getAllTasks();\r\n    }\r\n\r\n\r\n    /**\r\n     * List of the checkbox ['Open', 'In-Progress', 'Completed', 'Archived']\r\n     */\r\n\r\n    listStatus = () => {\r\n        const status = ['Open', 'In progress', 'Completed', 'Archived']\r\n        return status.map((state, i) => {\r\n            return (\r\n                <div key={i}>\r\n                    <input\r\n                        style={{ marginRight: '8px' }}\r\n                        type=\"radio\"\r\n                        label={state}\r\n                        value={state}\r\n                        checked={this.state.initialStatus === state}\r\n                        onChange={(e) => this.selectStatus(e, state)}\r\n                    /><label>{state}</label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {e} \r\n     * change of state for value query, if it's empty call function\r\n     * getAllTasks() for field all the tasks\r\n     */\r\n\r\n    handleChange = (e) => {\r\n        const query = e.target.value\r\n        this.setState({ query })\r\n        if (query === '') {\r\n            this.getAllTasks();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {e}\r\n     * Function allow search a task when you make a click or enter in the button\r\n     */\r\n    searchTask = (e) => {\r\n        e.preventDefault();\r\n        const status = this.state.initialStatus;\r\n        const query = this.state.query\r\n\r\n        switch (status) {\r\n            case 'Open':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredOpen = res.data.body;\r\n                    this.setState({ tasksOpen: filteredOpen })\r\n                })\r\n                break\r\n            case 'In progress':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredInProgress = res.data.body;\r\n                    this.setState({ tasksInProgress: filteredInProgress })\r\n                })\r\n                break\r\n            case 'Completed':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredCompleted = res.data.body;\r\n                    this.setState({ tasksCompleted: filteredCompleted })\r\n                })\r\n                break\r\n            case 'Archived':\r\n                this.state.tasksService.searchTask(query, status).then((res) => {\r\n                    const filteredArchived = res.data.body;\r\n                    this.setState({ tasksArchived: filteredArchived })\r\n                })\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method that conditions if you stay editing a Task, and set the variable id \r\n     */\r\n    editTask = (id) => {\r\n        this.setState({ createtask: true, editing: true, id: id })\r\n    }\r\n\r\n    /**\r\n     * Method for call the API Delete Tasks\r\n    */\r\n    deleteTask = (id) => {\r\n        if (window.confirm(\"Are you sure delete this Task?\")) {\r\n            this.state.tasksService.deleteTask(id).then((res) => {\r\n                this.getAllTasks()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Method that allow unassign a User in a Task \r\n     */\r\n    unassignUser = (id) => {\r\n        if (window.confirm(\"Are you sure delete this User in the task?\")) {\r\n            this.state.tasksService.unassignUser(id).then((res) => {\r\n                this.getAllTasks()\r\n                this.setState({ notification: true })\r\n                setTimeout(() => {\r\n                    this.setState({ notification: false })\r\n                }, 2000);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { query,\r\n            initialStatus,\r\n            tasksOpen,\r\n            tasksInProgress,\r\n            tasksCompleted,\r\n            tasksArchived,\r\n            createtask,\r\n            editing,\r\n            id,\r\n            notification } = this.state\r\n        return (\r\n            <div className=\"container-list\">\r\n                {\r\n                    notification ? <Alerts /> : null\r\n                }\r\n                <div><h1>List Tasks</h1></div>\r\n                {createtask ? <AddTask show={createtask} handleShow={(e, action) => this.changeShowModal(e, action)} edit={editing} id={id} /> : null}\r\n                <div className=\"add-task\">\r\n                    <Button onClick={(e) => { this.actionAddTask(e) }}>Add Task</Button>\r\n                </div>\r\n                <div className=\"container-search\">\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input style={{ width: \"85%\" }}\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search by Title\"\r\n                            aria-label=\"Search\"\r\n                            value={query}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                            type=\"submit\"\r\n                            onClick={(e) => this.searchTask(e)}\r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"container-status\">\r\n                    {this.listStatus()}\r\n                </div>\r\n                {initialStatus === 'Open' && tasksOpen.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksOpen.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"In progress\" && tasksInProgress.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksInProgress.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"Completed\" && tasksCompleted.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksCompleted.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : initialStatus === \"Archived\" && tasksArchived.length !== 0 ? <div className=\"wrapp-tasks\">\r\n                    {tasksArchived.map((task) => {\r\n                        return (\r\n                            <Task key={task._id} task={task} handleEdit={(id) => this.editTask(id)} handleDelete={(id) => this.deleteTask(id)} handleUnassign={(id) => this.unassignUser(id)} />\r\n                        )\r\n                    })}\r\n                </div> : <h5>There are no tasks to show</h5>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTasks\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <NavLink to=\"/\"><Navbar.Brand>To Do List</Navbar.Brand></NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"active\">\r\n                            Home\r\n                </NavLink>\r\n                        <NavLink\r\n                            className=\"nav-link\"\r\n                            to=\"/listTasks\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            List Tasks\r\n                </NavLink>\r\n                        <NavLink\r\n                            className=\"nav-link\"\r\n                            to=\"/listUsers\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            List Users\r\n                </NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <h1>Hello Everyone!</h1>\r\n            <p>\r\n                This project is similar to the widely known tool Trello, and it was made for enlarging my knowledge in ReactJS\r\n            </p>\r\n            <p>\r\n                <NavLink\r\n                    className=\"btn btn-primary btn-lg\"\r\n                    to=\"/listTasks\"\r\n                    role=\"button\"\r\n                >\r\n                    List Tasks!\r\n        </NavLink>\r\n            </p>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route} from 'react-router-dom';\nimport ListUsers from './components/users/ListUsers';\nimport ListTasks from './components/tasks/ListTasks';\nimport Navigation from './components/shared/Navigation';\nimport Main from './components/shared/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation></Navigation>\n        <div className=\"container p-4\">\n        <Route path=\"/\" exact component={Main}></Route>\n        <Route path=\"/listTasks\" component={ListTasks}></Route>\n        <Route path=\"/listUsers\" component={ListUsers}></Route>\n      </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}